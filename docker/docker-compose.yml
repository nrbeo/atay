version: "3.9"

x-airflow-common:
  &airflow-common
  build: .
  env_file:
    - ../config/.env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: airflow.providers.celery.executors.celery_executor.CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:${REDIS_PORT}/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW_CONFIG: '/opt/airflow/config/airflow.cfg'
  volumes:
    - ../src/dags:/opt/airflow/dags
    - ../data:/opt/airflow/data
    - ../config:/opt/airflow/config
    - ../src/etl:/opt/airflow/etl
    - ../logs:/opt/airflow/logs
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:16
    container_name: atay_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
    restart: always
    networks:
      - atay_network

  redis:
    image: redis:7.2-bookworm
    container_name: atay_redis
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
    restart: always
    networks:
      - atay_network

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: atay_airflow_webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      retries: 5
    restart: always
    networks:
      - atay_network
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    container_name: atay_airflow_scheduler
    restart: always
    networks:
      - atay_network
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    container_name: atay_airflow_worker
    restart: always
    networks:
      - atay_network
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    container_name: atay_airflow_triggerer
    restart: always
    networks:
      - atay_network
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    container_name: atay_airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/{logs,dags,plugins,config,data}
        chown -R "${AIRFLOW_UID}:0" /opt/airflow/
        exec /entrypoint airflow db upgrade
        exec /entrypoint airflow users create \
          --username ${_AIRFLOW_WWW_USER_USERNAME} \
          --firstname ${_AIRFLOW_WWW_USER_FIRSTNAME} \
          --lastname ${_AIRFLOW_WWW_USER_LASTNAME} \
          --role Admin \
          --email ${_AIRFLOW_WWW_USER_EMAIL} \
          --password ${_AIRFLOW_WWW_USER_PASSWORD}
    networks:
      - atay_network

  pgadmin:
    image: elestio/pgadmin
    container_name: atay_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    restart: always
    networks:
      - atay_network
    depends_on:
      - postgres

networks:
  atay_network:
    name: atay_network

volumes:
  postgres_data:
